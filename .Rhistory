}else if(str_detect(filename, "AUG_INCEPT")){
# browser()
data = read_excel(filename, col_names = TRUE) %>% clean_names() %>% select(-x2)
data = data %>% mutate(across(everything(), ~na_if(.x, "#N/A N/A"))) %>%
mutate(across(everything(), ~na_if(.x, "#N/A Field Not Applicable"))) %>%
mutate(market_cap_mil_gbp=as.numeric(market_cap_mil_gbp),
inception = as.Date(inception, "%d/%m/%Y"),
industry_debt = ifelse(str_detect(name, regex("corp", ignore_case=TRUE))|str_detect(name, regex("crp", ignore_case=TRUE)),"Corporate", industry_debt),
industry_debt = ifelse(isin=="IE00BDFGJ627", "Corporate", industry_debt),
esg = ifelse(str_detect(name, regex("esg", ignore_case=TRUE)), TRUE, FALSE))
}else if(str_detect(filename, "primary")){
data = read_csv(filename) %>% clean_names()
data = data %>% mutate(signed_q = ifelse(create=='Creation', quantity, -quantity)) %>%
filter(isin!="IE00BQT3VN15")
}else if (str_detect(filename, "price")){
data = data %>% mutate(price=ifelse(isin=='IE00B4L5Y983',price/100,price),
high=ifelse(isin=='IE00B4L5Y983',high/100,high),
low=ifelse(isin=='IE00B4L5Y983',low/100,low))%>%
group_by(isin) %>% arrange(date) %>% mutate(px_rt = ((price-lag(price))/lag(price))*100) %>% ungroup()
}else if (str_detect(filename, "nav")){
data = data %>% group_by(isin) %>% arrange(date) %>%  mutate(nav_rt = ((nav-lag(nav))/lag(nav))*100)
}else if(str_detect(filename, "csv")){
data = read_csv(filename) %>% clean_names()
data[[2]] = as.numeric(data[[2]])
if (str_detect(filename, "dealer_np")){
colnames(data) = c("date", "instrument", "value_mil")
data = data %>% mutate(value_mil = as.numeric(value_mil)) %>% group_by(date) %>% summarise(tot_val_mil = sum(value_mil, na.rm=TRUE))
}
data = data %>% mutate(date=as.Date(date))
}else if(str_detect(filename, "vixivi")){
data = read_excel(filename, col_names = TRUE) %>% clean_names()
colnames(data) = c("date","vix","ivi")
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A"))) %>%
mutate(date=as.Date(date),
vix=as.numeric(vix),
ivi=as.numeric(ivi))
}
############## Common for all dfs ################################################
if (!str_detect(filename, "AUG_INCEPT")){
data = na.omit(data)
}
if ("date" %in% colnames(data)){
data = data %>%
filter((date>=as.Date("2018-01-01"))&(date<=as.Date('2022-10-31'))) %>%
filter(date %in% bizdays$date) %>%
arrange(date)
}
if ((length(isin_list)>1)&("isin" %in% colnames(data))){
data = data %>% filter(isin %in% isin_list)
}
if ("group" %in% colnames(data)){
data = data %>% mutate(group=ifelse(group=='B', 'Bond', ifelse(group=='C', 'Corp Bond', ifelse(group=='Equity', 'Equity', 'Gov Bond'))))
}
# browser()
setDT(data)
return(data)
}
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
install.packages("readxl")
library(readxl)
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
library(purrr)
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', isin_list,TRUE,2,8)
price = rbind(price, aug_price)
library(janitor)
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', isin_list,TRUE,2,8)
price = rbind(price, aug_price)
library(stringr)
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', isin_list,TRUE,2,8)
price = rbind(price, aug_price)
library(dplyr)
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', isin_list,TRUE,2,8)
price = rbind(price, aug_price)
load_bizdays = function(){
bizdays.options$set(default.calendar="Rmetrics/LONDON")
load_rmetrics_calendars(1990:2023)
bizdays <- tibble(date = bizseq("2018-01-01", "2022-10-31", cal = "Rmetrics/LONDON")) %>% pull(date)
bizdays = as.data.frame(bizdays) %>% rename(date = bizdays)
return(bizdays)
}
bizdays = load_bizdays()
library(bizdays)
install.packages("bizdays")
load_bizdays = function(){
bizdays.options$set(default.calendar="Rmetrics/LONDON")
load_rmetrics_calendars(1990:2023)
bizdays <- tibble(date = bizseq("2018-01-01", "2022-10-31", cal = "Rmetrics/LONDON")) %>% pull(date)
bizdays = as.data.frame(bizdays) %>% rename(date = bizdays)
return(bizdays)
}
bizdays = load_bizdays()
library(bizdays)
load_bizdays = function(){
bizdays.options$set(default.calendar="Rmetrics/LONDON")
load_rmetrics_calendars(1990:2023)
bizdays <- tibble(date = bizseq("2018-01-01", "2022-10-31", cal = "Rmetrics/LONDON")) %>% pull(date)
bizdays = as.data.frame(bizdays) %>% rename(date = bizdays)
return(bizdays)
}
bizdays = load_bizdays()
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', isin_list,TRUE,2,8)
price = rbind(price, aug_price)
price = load_data_from_file('./aux_data_file/full__price.xlsx', NA,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', NA,TRUE,2,8)
price = rbind(price, aug_price)
library(data.table)
price = load_data_from_file('./aux_data_file/full__price.xlsx', NA,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', NA,TRUE,2,8)
price = rbind(price, aug_price)
price = load_data_from_file('./aux_data_file/full__price.xlsx', NA,TRUE,2,5)
rlang::last_trace()
price = load_data_from_file('./aux_data_file/full__price.xlsx', NA,TRUE,2,5)
filename='./aux_data_file/full__price.xlsx'
sheets = excel_sheets(filename)
sheets = sheets[sheet_start:length(sheets)]
sheet_start=1
sheet_start=2
skip=5
sheets = excel_sheets(filename)
sheets = sheets[sheet_start:length(sheets)]
data = map_dfr(sheets, ~read_multi(.x, filename, skip), .progress=TRUE)
sheets = excel_sheets(filename)
sheets = sheets[sheet_start:length(sheets)]
sheets = excel_sheets(filename)
sheets = sheets[sheet_start:length(sheets)]
read_multi = function(x, filename, skip){
suppressWarnings(data <- read_excel(filename, sheet = x, skip=skip, col_names = TRUE) %>% clean_names())
# browser()
if (str_detect(filename, "tso")){
data = data %>% rename(date = dates,
shares = bb_fund_shares_outstandng)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}else if(str_detect(filename, "price")){
# browser()
colnames(data) = c('date','price','high','low')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
price = as.numeric(price),
high = as.numeric(high),
low = as.numeric(low))
}else if (str_detect(filename, "nav")){
colnames(data) = c('date','nav')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
nav = as.numeric(nav))
}else if (str_detect(filename, "bidask")){
colnames(data) = c('date','bidask')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
bidask = as.numeric(bidask))
}else if (str_detect(filename, "shares")){
data = data %>% rename(date = dates,
shares = eqy_sh_out)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}
data['isin'] = substring(x,1,12)
return(data)
}
data = map_dfr(sheets, ~read_multi(.x, filename, skip), .progress=TRUE)
colnames(data) = c('date','price','high','low')
isin_info = load_data_from_file('../aux_data_file/AUG_INCEPT_MKTCAP.xls',NA,FALSE,NA,NA)
isin_info = load_data_from_file('./aux_data_file/AUG_INCEPT_MKTCAP.xls',NA,FALSE,NA,NA)
isin_info = load_data_from_file('./aux_data_file/AUG_INCEPT_MKTCAP_ADDED.xls',NA,FALSE,NA,NA)
data
load_data_from_file = function(filename, isin_list, multi_sheets, sheet_start, skip){
# order of manipulations: change colnames, coltypes(default is char), df-specific manipulations
############# read in data for multisheets dfs ##########################################################
if (multi_sheets){
sheets = excel_sheets(filename)
sheets = sheets[sheet_start:length(sheets)]
data = map_dfr(sheets, ~read_multi(.x, filename, skip), .progress=TRUE)
}
############## file specific manipulations ############################################
if (str_detect(filename, "macro")){
# browser()
data = read_excel(filename, skip=3) %>% clean_names()
cols = colnames(data)
data = read_excel(filename, skip=4)
colnames(data) = c("date", cols[2:length(cols)])
data = data %>% dplyr::select(date, spx_index, ukx_index, legatruu_index)
colnames(data) = c("date","sp500", "ftse100", "blbg_bond")
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")))
data = data %>% arrange(date) %>% mutate(date = as.Date(date),
sp500 = as.numeric(sp500),
blbg_bond = as.numeric(blbg_bond),
ftse100 = as.numeric(ftse100),
sp500_l1 = dplyr::lag(sp500),
blbg_bond_l1 = dplyr::lag(blbg_bond),
ftse100_l1 = dplyr::lag(ftse100),
sp500_rt = ((sp500-sp500_l1)/sp500_l1)*100,
blbg_bond_rt = ((blbg_bond-blbg_bond_l1)/blbg_bond_l1)*100,
ftse100_rt = ((ftse100-ftse100_l1)/ftse100_l1)*100)
}else if(str_detect(filename, "AUG_INCEPT")){
# browser()
data = read_excel(filename, col_names = TRUE) %>% clean_names() %>% select(-x2)
data = data %>% mutate(across(everything(), ~na_if(.x, "#N/A N/A"))) %>%
mutate(across(everything(), ~na_if(.x, "#N/A Field Not Applicable"))) %>%
mutate(market_cap_mil_gbp=as.numeric(market_cap_mil_gbp),
inception = as.Date(inception, "%d/%m/%Y"),
industry_debt = ifelse(str_detect(name, regex("corp", ignore_case=TRUE))|str_detect(name, regex("crp", ignore_case=TRUE)),"Corporate", industry_debt),
industry_debt = ifelse(isin=="IE00BDFGJ627", "Corporate", industry_debt),
esg = ifelse(str_detect(name, regex("esg", ignore_case=TRUE)), TRUE, FALSE))
}else if(str_detect(filename, "primary")){
data = read_csv(filename) %>% clean_names()
data = data %>% mutate(signed_q = ifelse(create=='Creation', quantity, -quantity)) %>%
filter(isin!="IE00BQT3VN15")
}else if (str_detect(filename, "price")){
data = data %>% mutate(price=ifelse(isin=='IE00B4L5Y983',price/100,price),
high=ifelse(isin=='IE00B4L5Y983',high/100,high),
low=ifelse(isin=='IE00B4L5Y983',low/100,low))%>%
group_by(isin) %>% arrange(date) %>% mutate(px_rt = ((price-lag(price))/lag(price))*100) %>% ungroup()
}else if (str_detect(filename, "nav")){
data = data %>% group_by(isin) %>% arrange(date) %>%  mutate(nav_rt = ((nav-lag(nav))/lag(nav))*100)
}else if(str_detect(filename, "csv")){
data = read_csv(filename) %>% clean_names()
data[[2]] = as.numeric(data[[2]])
if (str_detect(filename, "dealer_np")){
colnames(data) = c("date", "instrument", "value_mil")
data = data %>% mutate(value_mil = as.numeric(value_mil)) %>% group_by(date) %>% summarise(tot_val_mil = sum(value_mil, na.rm=TRUE))
}
data = data %>% mutate(date=as.Date(date))
}else if(str_detect(filename, "vixivi")){
data = read_excel(filename, col_names = TRUE) %>% clean_names()
colnames(data) = c("date","vix","ivi")
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A"))) %>%
mutate(date=as.Date(date),
vix=as.numeric(vix),
ivi=as.numeric(ivi))
}
############## Common for all dfs ################################################
if (!str_detect(filename, "AUG_INCEPT")){
data = na.omit(data)
}
if ("date" %in% colnames(data)){
data = data %>%
filter((date>=as.Date("2018-01-01"))&(date<=as.Date('2022-10-31'))) %>%
filter(date %in% bizdays$date) %>%
arrange(date)
}
if ((length(isin_list)>1)&("isin" %in% colnames(data))){
data = data %>% filter(isin %in% isin_list)
}
if ("group" %in% colnames(data)){
data = data %>% mutate(group=ifelse(group=='B', 'Bond', ifelse(group=='C', 'Corp Bond', ifelse(group=='Equity', 'Equity', 'Gov Bond'))))
}
# browser()
setDT(data)
return(data)
}
load_data_from_file = function(filename, isin_list, multi_sheets, sheet_start, skip){
# order of manipulations: change colnames, coltypes(default is char), df-specific manipulations
############# read in data for multisheets dfs ##########################################################
if (multi_sheets){
sheets = excel_sheets(filename)
sheets = sheets[sheet_start:length(sheets)]
data = map_dfr(sheets, ~read_multi(.x, filename, skip), .progress=TRUE)
}
############## file specific manipulations ############################################
if (str_detect(filename, "macro")){
# browser()
data = read_excel(filename, skip=3) %>% clean_names()
cols = colnames(data)
data = read_excel(filename, skip=4)
colnames(data) = c("date", cols[2:length(cols)])
data = data %>% dplyr::select(date, spx_index, ukx_index, legatruu_index)
colnames(data) = c("date","sp500", "ftse100", "blbg_bond")
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")))
data = data %>% arrange(date) %>% mutate(date = as.Date(date),
sp500 = as.numeric(sp500),
blbg_bond = as.numeric(blbg_bond),
ftse100 = as.numeric(ftse100),
sp500_l1 = dplyr::lag(sp500),
blbg_bond_l1 = dplyr::lag(blbg_bond),
ftse100_l1 = dplyr::lag(ftse100),
sp500_rt = ((sp500-sp500_l1)/sp500_l1)*100,
blbg_bond_rt = ((blbg_bond-blbg_bond_l1)/blbg_bond_l1)*100,
ftse100_rt = ((ftse100-ftse100_l1)/ftse100_l1)*100)
}else if(str_detect(filename, "AUG_INCEPT")){
# browser()
data = read_excel(filename, col_names = TRUE) %>% clean_names() %>% select(-x2)
data = data %>% mutate(across(everything(), ~na_if(.x, "#N/A N/A"))) %>%
mutate(across(everything(), ~na_if(.x, "#N/A Field Not Applicable"))) %>%
mutate(market_cap_mil_gbp=as.numeric(market_cap_mil_gbp),
inception = as.Date(inception, "%d/%m/%Y"),
industry_debt = ifelse(str_detect(name, regex("corp", ignore_case=TRUE))|str_detect(name, regex("crp", ignore_case=TRUE)),"Corporate", industry_debt),
industry_debt = ifelse(isin=="IE00BDFGJ627", "Corporate", industry_debt),
esg = ifelse(str_detect(name, regex("esg", ignore_case=TRUE)), TRUE, FALSE))
}else if(str_detect(filename, "primary")){
data = read_csv(filename) %>% clean_names()
data = data %>% mutate(signed_q = ifelse(create=='Creation', quantity, -quantity)) %>%
filter(isin!="IE00BQT3VN15")
}else if (str_detect(filename, "price")){
data = data %>% mutate(price=ifelse(isin=='IE00B4L5Y983',price/100,price),
high=ifelse(isin=='IE00B4L5Y983',high/100,high),
low=ifelse(isin=='IE00B4L5Y983',low/100,low))%>%
group_by(isin) %>% arrange(date) %>% mutate(px_rt = ((price-lag(price))/lag(price))*100) %>% ungroup()
}else if (str_detect(filename, "nav")){
data = data %>% group_by(isin) %>% arrange(date) %>%  mutate(nav_rt = ((nav-lag(nav))/lag(nav))*100)
}else if(str_detect(filename, "csv")){
data = read_csv(filename) %>% clean_names()
data[[2]] = as.numeric(data[[2]])
if (str_detect(filename, "dealer_np")){
colnames(data) = c("date", "instrument", "value_mil")
data = data %>% mutate(value_mil = as.numeric(value_mil)) %>% group_by(date) %>% summarise(tot_val_mil = sum(value_mil, na.rm=TRUE))
}
data = data %>% mutate(date=as.Date(date))
}else if(str_detect(filename, "vixivi")){
data = read_excel(filename, col_names = TRUE) %>% clean_names()
colnames(data) = c("date","vix","ivi")
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A"))) %>%
mutate(date=as.Date(date),
vix=as.numeric(vix),
ivi=as.numeric(ivi))
}
############## Common for all dfs ################################################
if (!str_detect(filename, "AUG_INCEPT")){
data = na.omit(data)
}
if ("date" %in% colnames(data)){
data = data %>%
filter((date>=as.Date("2018-01-01"))&(date<=as.Date('2022-10-31'))) %>%
filter(date %in% bizdays$date) %>%
arrange(date)
}
if ((length(isin_list)>1)&("isin" %in% colnames(data))){
data = data %>% filter(isin %in% isin_list)
}
if ("group" %in% colnames(data)){
data = data %>% mutate(group=ifelse(group=='B', 'Bond', ifelse(group=='C', 'Corp Bond', ifelse(group=='Equity', 'Equity', 'Gov Bond'))))
}
# browser()
setDT(data)
return(data)
}
isin_info = load_data_from_file('./aux_data_file/AUG_INCEPT_MKTCAP_ADDED.xls',NA,FALSE,NA,NA)
filename='./aux_data_file/AUG_INCEPT_MKTCAP_ADDED.xls'
data = read_excel(filename, col_names = TRUE) %>% clean_names() %>% select(-x2)
data = data %>% mutate(across(everything(), ~na_if(.x, "#N/A N/A"))) %>%
mutate(across(everything(), ~na_if(.x, "#N/A Field Not Applicable"))) %>%
mutate(market_cap_mil_gbp=as.numeric(market_cap_mil_gbp),
inception = as.Date(inception, "%d/%m/%Y"),
industry_debt = ifelse(str_detect(name, regex("corp", ignore_case=TRUE))|str_detect(name, regex("crp", ignore_case=TRUE)),"Corporate", industry_debt),
industry_debt = ifelse(isin=="IE00BDFGJ627", "Corporate", industry_debt),
esg = ifelse(str_detect(name, regex("esg", ignore_case=TRUE)), TRUE, FALSE))
data
data %>% mutate(across(everything(), ~na_if(.x, "#N/A N/A"))) %>%
mutate(across(everything(), ~na_if(.x, "#N/A Field Not Applicable")))
data %>% mutate(across(everything(), ~na_if(.x, "#N/A N/A"))) %>%
mutate(!market_cap_mil_gbp, ~na_if(.x, "#N/A Field Not Applicable"))
data %>% mutate(!market_cap_mil_gbp, ~na_if(.x, "#N/A N/A")) %>%
mutate(!market_cap_mil_gbp, ~na_if(.x, "#N/A Field Not Applicable"))
# browser()
data = read_excel(filename, col_names = TRUE) %>% clean_names() %>% select(-x2)
data
length(unique(data$isin))
isin_list=length(unique(data$isin))
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
read_multi = function(x, filename, skip){
suppressWarnings(data <- read_excel(filename, sheet = x, skip=skip, col_names = TRUE) %>% clean_names())
# browser()
if (str_detect(filename, "tso")){
data = data %>% rename(date = dates,
shares = bb_fund_shares_outstandng)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}else if(str_detect(filename, "price")){
# browser()
colnames(data) = c('date','price','high','low')
data = data %>% mutate(across(!date, ~na_if(as.character(.x), "#N/A N/A")),
date = as.Date(date),
price = as.numeric(price),
high = as.numeric(high),
low = as.numeric(low))
}else if (str_detect(filename, "nav")){
colnames(data) = c('date','nav')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
nav = as.numeric(nav))
}else if (str_detect(filename, "bidask")){
colnames(data) = c('date','bidask')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
bidask = as.numeric(bidask))
}else if (str_detect(filename, "shares")){
data = data %>% rename(date = dates,
shares = eqy_sh_out)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}
data['isin'] = substring(x,1,12)
return(data)
}
read_multi = function(x, filename, skip){
suppressWarnings(data <- read_excel(filename, sheet = x, skip=skip, col_names = TRUE) %>% clean_names())
# browser()
if (str_detect(filename, "tso")){
data = data %>% rename(date = dates,
shares = bb_fund_shares_outstandng)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}else if(str_detect(filename, "price")){
# browser()
colnames(data) = c('date','price','high','low')
data = data %>% mutate(across(!date, ~na_if(as.character(.x), "#N/A N/A")),
date = as.Date(date),
price = as.numeric(price),
high = as.numeric(high),
low = as.numeric(low))
}else if (str_detect(filename, "nav")){
colnames(data) = c('date','nav')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
nav = as.numeric(nav))
}else if (str_detect(filename, "bidask")){
colnames(data) = c('date','bidask')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
bidask = as.numeric(bidask))
}else if (str_detect(filename, "shares")){
data = data %>% rename(date = dates,
shares = eqy_sh_out)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}
data['isin'] = substring(x,1,12)
return(data)
}
price = load_data_from_file('./aux_data_file/full__price.xlsx', isin_list,TRUE,2,5)
aug_price = load_data_from_file('./aux_data_file/aug_price.xlsx', NA,TRUE,2,8)
price = rbind(price, aug_price)
price
read_multi = function(x, filename, skip){
suppressWarnings(data <- read_excel(filename, sheet = x, skip=skip, col_names = TRUE) %>% clean_names())
# browser()
if (str_detect(filename, "tso")){
data = data %>% rename(date = dates,
shares = bb_fund_shares_outstandng)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}else if(str_detect(filename, "price")){
# browser()
colnames(data) = c('date','price','high','low')
data = data %>% mutate(across(!date, ~na_if(as.character(.x), "#N/A N/A")),
date = as.Date(date),
price = as.numeric(price),
high = as.numeric(high),
low = as.numeric(low))
}else if (str_detect(filename, "nav")){
colnames(data) = c('date','nav')
data = data %>% mutate(across(!date, ~na_if(as.character(.x), "#N/A N/A")),
date = as.Date(date),
nav = as.numeric(nav))
}else if (str_detect(filename, "bidask")){
colnames(data) = c('date','bidask')
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
bidask = as.numeric(bidask))
}else if (str_detect(filename, "shares")){
data = data %>% rename(date = dates,
shares = eqy_sh_out)
data = data %>% mutate(across(!date, ~na_if(.x, "#N/A N/A")),
date = as.Date(date),
shares = as.numeric(shares))
data = data %>% mutate(shares = shares*1000000)
}
data['isin'] = substring(x,1,12)
return(data)
}
nav = load_data_from_file('./aux_data_file/full__nav.xlsx', NA,TRUE,2,5)
aug_nav = load_data_from_file('./aux_data_file/aug_nav.xlsx', NA,TRUE,2,14)
nav = rbind(nav, aug_nav)
gen_px_nav = function(price, nav){
price_nav = price %>% left_join(nav, by=c("date","isin")) %>% mutate(diff=((price-nav)/nav)*100)
}
px_nav = gen_px_nav(price, nav)
price
duplicated(price %>% select(date, isin))
sum(duplicated(price %>% select(date, isin)))
which(duplicated(price %>% select(date, isin)))
price
price %>% distinct()
nav
nav %>% distinct()
gen_px_nav = function(price, nav){
price_nav = price %>% distinct() %>% left_join(nav %>% distinct(), by=c("date","isin")) %>% mutate(diff=((price-nav)/nav)*100)
}
px_nav = gen_px_nav(price, nav)
px_nav
write_csv(px_nav, "px_nav.csv")
library(readr)
write_csv(px_nav, "px_nav.csv")
